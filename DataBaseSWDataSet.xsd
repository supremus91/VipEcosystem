<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataBaseSWDataSet" targetNamespace="http://tempuri.org/DataBaseSWDataSet.xsd" xmlns:mstns="http://tempuri.org/DataBaseSWDataSet.xsd" xmlns="http://tempuri.org/DataBaseSWDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="MySettings" AppSettingsPropertyName="DataBaseSWConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="DataBaseSWConnectionString (MySettings)" PropertyReference="ApplicationSettings.VipDesignerUM.My.MySettings.GlobalReference.Default.DataBaseSWConnectionString" Provider="System.Data.OleDb" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MotoreTableAdapter" GeneratorDataComponentClassName="MotoreTableAdapter" Name="Motore" UserDataComponentName="MotoreTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseSWConnectionString (MySettings)" DbObjectName="Motore" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Motore` WHERE ((`ID` = ?) AND ((? = 1 AND `TipoMotore` IS NULL) OR (`TipoMotore` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoMotore" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoMotore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Motore` (`TipoMotore`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoMotore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, TipoMotore FROM Motore</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Motore` SET `TipoMotore` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `TipoMotore` IS NULL) OR (`TipoMotore` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoMotore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoMotore" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoMotore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoMotore" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="TipoMotore" DataSetColumn="TipoMotore" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SerieVentolaTableAdapter" GeneratorDataComponentClassName="SerieVentolaTableAdapter" Name="SerieVentola" UserDataComponentName="SerieVentolaTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseSWConnectionString (MySettings)" DbObjectName="SerieVentola" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `SerieVentola` WHERE ((`ID` = ?) AND ((? = 1 AND `TipoVentola` IS NULL) OR (`TipoVentola` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoVentola" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoVentola" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `SerieVentola` (`TipoVentola`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoVentola" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, TipoVentola FROM SerieVentola</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `SerieVentola` SET `TipoVentola` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `TipoVentola` IS NULL) OR (`TipoVentola` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoVentola" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoVentola" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoVentola" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentola" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="TipoVentola" DataSetColumn="TipoVentola" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VentilatoriTableAdapter" GeneratorDataComponentClassName="VentilatoriTableAdapter" Name="Ventilatori" UserDataComponentName="VentilatoriTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="DataBaseSWConnectionString (MySettings)" DbObjectName="Ventilatori" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM `Ventilatori` WHERE ((`ID` = ?) AND ((? = 1 AND `TipoVentilatore` IS NULL) OR (`TipoVentilatore` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoVentilatore" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoVentilatore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO `Ventilatori` (`TipoVentilatore`) VALUES (?)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoVentilatore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, TipoVentilatore FROM Ventilatori</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE `Ventilatori` SET `TipoVentilatore` = ? WHERE ((`ID` = ?) AND ((? = 1 AND `TipoVentilatore` IS NULL) OR (`TipoVentilatore` = ?)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="TipoVentilatore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="Original_ID" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="IsNull_TipoVentilatore" Precision="0" ProviderType="Integer" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="Original_TipoVentilatore" Precision="0" ProviderType="VarWChar" Scale="0" Size="0" SourceColumn="TipoVentilatore" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="TipoVentilatore" DataSetColumn="TipoVentilatore" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataBaseSWDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="DataBaseSWDataSet" msprop:Generator_UserDSName="DataBaseSWDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Motore" msprop:Generator_TableClassName="MotoreDataTable" msprop:Generator_TableVarName="tableMotore" msprop:Generator_TablePropName="Motore" msprop:Generator_RowDeletingName="MotoreRowDeleting" msprop:Generator_RowChangingName="MotoreRowChanging" msprop:Generator_RowEvHandlerName="MotoreRowChangeEventHandler" msprop:Generator_RowDeletedName="MotoreRowDeleted" msprop:Generator_UserTableName="Motore" msprop:Generator_RowChangedName="MotoreRowChanged" msprop:Generator_RowEvArgName="MotoreRowChangeEvent" msprop:Generator_RowClassName="MotoreRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="TipoMotore" msprop:Generator_ColumnVarNameInTable="columnTipoMotore" msprop:Generator_ColumnPropNameInRow="TipoMotore" msprop:Generator_ColumnPropNameInTable="TipoMotoreColumn" msprop:Generator_UserColumnName="TipoMotore" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SerieVentola" msprop:Generator_TableClassName="SerieVentolaDataTable" msprop:Generator_TableVarName="tableSerieVentola" msprop:Generator_TablePropName="SerieVentola" msprop:Generator_RowDeletingName="SerieVentolaRowDeleting" msprop:Generator_RowChangingName="SerieVentolaRowChanging" msprop:Generator_RowEvHandlerName="SerieVentolaRowChangeEventHandler" msprop:Generator_RowDeletedName="SerieVentolaRowDeleted" msprop:Generator_UserTableName="SerieVentola" msprop:Generator_RowChangedName="SerieVentolaRowChanged" msprop:Generator_RowEvArgName="SerieVentolaRowChangeEvent" msprop:Generator_RowClassName="SerieVentolaRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="TipoVentola" msprop:Generator_ColumnVarNameInTable="columnTipoVentola" msprop:Generator_ColumnPropNameInRow="TipoVentola" msprop:Generator_ColumnPropNameInTable="TipoVentolaColumn" msprop:Generator_UserColumnName="TipoVentola" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Ventilatori" msprop:Generator_TableClassName="VentilatoriDataTable" msprop:Generator_TableVarName="tableVentilatori" msprop:Generator_TablePropName="Ventilatori" msprop:Generator_RowDeletingName="VentilatoriRowDeleting" msprop:Generator_RowChangingName="VentilatoriRowChanging" msprop:Generator_RowEvHandlerName="VentilatoriRowChangeEventHandler" msprop:Generator_RowDeletedName="VentilatoriRowDeleted" msprop:Generator_UserTableName="Ventilatori" msprop:Generator_RowChangedName="VentilatoriRowChanged" msprop:Generator_RowEvArgName="VentilatoriRowChangeEvent" msprop:Generator_RowClassName="VentilatoriRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="TipoVentilatore" msprop:Generator_ColumnVarNameInTable="columnTipoVentilatore" msprop:Generator_ColumnPropNameInRow="TipoVentilatore" msprop:Generator_ColumnPropNameInTable="TipoVentilatoreColumn" msprop:Generator_UserColumnName="TipoVentilatore" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Motore" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="SerieVentola_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SerieVentola" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Ventilatori_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Ventilatori" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
  </xs:element>
</xs:schema>